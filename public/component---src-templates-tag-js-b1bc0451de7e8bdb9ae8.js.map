{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./src/components/PostListing.js"],"names":["TagTemplate","render","tag","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","title","config","siteTitle","className","Component","pageQuery","PostListing","getPostList","map","postEdge","path","node","fields","slug","tags","frontmatter","thumbnail","date","excerpt","timeToRead","categories","simple","postList","post","formatDate","to","key"],"mappings":"oRAOqBA,E,gLACnBC,OAAA,WAAU,IACAC,EAAQC,KAAKC,MAAMC,YAAnBH,IACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MAEpD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAK,sBAAwBR,EAAxB,OAAkCS,IAAOC,YACtD,yBAAKC,UAAU,aACb,8CACkB,IAChB,2BACE,gCAASX,KAGb,kBAAC,IAAD,CAAaI,UAAWA,O,GAfOQ,aAsB5BC,EAAS,c,yHCzBDC,E,wLACnBC,YAAA,WAcE,OAbsBd,KAAKC,MAAnBE,UACmBY,KAAI,SAAAC,GAC7B,MAAO,CACLC,KAAMD,EAASE,KAAKC,OAAOC,KAC3BC,KAAML,EAASE,KAAKI,YAAYD,KAChCE,UAAWP,EAASE,KAAKI,YAAYC,UACrChB,MAAOS,EAASE,KAAKI,YAAYf,MACjCiB,KAAMR,EAASE,KAAKC,OAAOK,KAC3BC,QAAST,EAASE,KAAKO,QACvBC,WAAYV,EAASE,KAAKQ,WAC1BC,WAAYX,EAASE,KAAKI,YAAYK,gB,EAM5C7B,OAAA,WAAU,IACA8B,EAAW5B,KAAKC,MAAhB2B,OACFC,EAAW7B,KAAKc,cAEtB,OACE,6BAASJ,UAAS,UAAWkB,EAAS,SAAW,KAC9CC,EAASd,KAAI,SAAAe,GAEZ,IAAMN,EAAOO,YAAWD,EAAKN,MAE7B,OACE,kBAAC,OAAD,CAAMQ,GAAIF,EAAKb,KAAMgB,IAAKH,EAAKvB,OAC7B,yBAAKG,UAAU,QACb,8BACA,yBAAKA,UAAU,kBACXkB,EAAiC,4BAAKE,EAAKvB,OAAlC,4BAAKuB,EAAKvB,OACrB,yBAAKG,UAAU,YAAYc,GACzBI,EAAmB,2BAAIE,EAAKL,SAAnB,sC,GAnCYd","file":"component---src-templates-tag-js-b1bc0451de7e8bdb9ae8.js","sourcesContent":["import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport config from '../../data/SiteConfig'\n\nexport default class TagTemplate extends Component {\n  render() {\n    const { tag } = this.props.pageContext\n    const postEdges = this.props.data.allMarkdownRemark.edges\n\n    return (\n      <Layout>\n        <Helmet title={`Posts tagged with \"${tag}\" â€“ ${config.siteTitle}`} />\n        <div className=\"container\">\n          <h1>\n            Posts tagged as{' '}\n            <u>\n              <strong>{tag}</strong>\n            </u>\n          </h1>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            thumbnail {\n              childImageSharp {\n                fixed(width: 150, height: 150) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            date\n            template\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport { formatDate } from '../utils/global'\n\nexport default class PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = postEdges.map(postEdge => {\n      return {\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        thumbnail: postEdge.node.frontmatter.thumbnail,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n        categories: postEdge.node.frontmatter.categories,\n      }\n    })\n    return postList\n  }\n\n  render() {\n    const { simple } = this.props\n    const postList = this.getPostList()\n\n    return (\n      <section className={`posts ${simple ? 'simple' : ''}`}>\n        {postList.map(post => {\n\n          const date = formatDate(post.date)\n\n          return (\n            <Link to={post.path} key={post.title}>\n              <div className=\"each\">\n                <div />\n                <div className=\"each-list-item\">\n                  {!simple ? <h2>{post.title}</h2> : <h3>{post.title}</h3>}\n                  <div className=\"datetime\">{date}</div>\n                  {!simple ? <div /> : <p>{post.excerpt}</p>}\n                </div>\n              </div>\n            </Link>\n          )\n        })}\n      </section>\n    )\n  }\n}\n"],"sourceRoot":""}