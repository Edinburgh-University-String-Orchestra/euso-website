{"version":3,"file":"component---src-templates-category-js-f380e2a170a89f6ab7a6.js","mappings":"6MAIqBA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,MAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UA2ClB,OA3CkBA,EACnBC,YAAA,WAcE,OAbsBC,KAAKC,MAAnBC,UACmBC,KAAI,SAAAC,GAC7B,MAAO,CACLC,KAAMD,EAASE,KAAKC,OAAOC,KAC3BC,KAAML,EAASE,KAAKI,YAAYD,KAChCE,UAAWP,EAASE,KAAKI,YAAYC,UACrCC,MAAOR,EAASE,KAAKI,YAAYE,MACjCC,KAAMT,EAASE,KAAKC,OAAOM,KAC3BC,QAASV,EAASE,KAAKQ,QACvBC,WAAYX,EAASE,KAAKS,WAC1BC,WAAYZ,EAASE,KAAKI,YAAYM,gBAI3C,EAEDC,OAAA,WACE,IAAQC,EAAWlB,KAAKC,MAAhBiB,OACFC,EAAWnB,KAAKD,cAEtB,OACE,2BAASqB,UAAS,UAAWF,EAAS,SAAW,KAC9CC,EAAShB,KAAI,SAAAkB,GAEZ,IAAMR,GAAOS,EAAAA,EAAAA,GAAWD,EAAKR,MAE7B,OACE,gBAAC,EAAAU,KAAD,CAAMC,GAAIH,EAAKhB,KAAMoB,IAAKJ,EAAKT,OAC7B,uBAAKQ,UAAU,QACb,4BACA,uBAAKA,UAAU,kBACXF,EAAiC,0BAAKG,EAAKT,OAAlC,0BAAKS,EAAKT,OACrB,uBAAKQ,UAAU,YAAYP,GACzBK,EAAmB,yBAAIG,EAAKP,SAAnB,oCAQ1B,EA3CkBhB,CAAoB4B,EAAAA,Y,2ICGpBC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAclB,OAdkBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACnBV,OAAA,WACE,IAAQW,EAAa5B,KAAKC,MAAM4B,YAAxBD,SACF1B,EAAYF,KAAKC,MAAM6B,KAAKC,kBAAkBC,MAEpD,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAQpB,MAAK,sBAAwBgB,EAAxB,OAAuCK,IAAAA,YACpD,uBAAKb,UAAU,aACb,0BAAKQ,GACL,gBAAC,IAAD,CAAa1B,UAAWA,OAI/B,EAdkByB,CAAyBD,EAAAA","sources":["webpack://string.eusa.ed.ac.uk/./src/components/PostListing.js","webpack://string.eusa.ed.ac.uk/./src/templates/category.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport { formatDate } from '../utils/global'\n\nexport default class PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = postEdges.map(postEdge => {\n      return {\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        thumbnail: postEdge.node.frontmatter.thumbnail,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n        categories: postEdge.node.frontmatter.categories,\n      }\n    })\n    return postList\n  }\n\n  render() {\n    const { simple } = this.props\n    const postList = this.getPostList()\n\n    return (\n      <section className={`posts ${simple ? 'simple' : ''}`}>\n        {postList.map(post => {\n\n          const date = formatDate(post.date)\n\n          return (\n            <Link to={post.path} key={post.title}>\n              <div className=\"each\">\n                <div />\n                <div className=\"each-list-item\">\n                  {!simple ? <h2>{post.title}</h2> : <h3>{post.title}</h3>}\n                  <div className=\"datetime\">{date}</div>\n                  {!simple ? <div /> : <p>{post.excerpt}</p>}\n                </div>\n              </div>\n            </Link>\n          )\n        })}\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport config from '../../data/SiteConfig'\n\nexport default class CategoryTemplate extends Component {\n  render() {\n    const { category } = this.props.pageContext\n    const postEdges = this.props.data.allMarkdownRemark.edges\n\n    return (\n      <Layout>\n        <Helmet title={`Posts in category \"${category}\" â€“ ${config.siteTitle}`} />\n        <div className=\"container\">\n          <h1>{category}</h1>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { categories: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            thumbnail {\n              childImageSharp {\n                fixed(width: 150, height: 150) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            date\n            template\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["PostListing","getPostList","this","props","postEdges","map","postEdge","path","node","fields","slug","tags","frontmatter","thumbnail","title","date","excerpt","timeToRead","categories","render","simple","postList","className","post","formatDate","Link","to","key","Component","CategoryTemplate","category","pageContext","data","allMarkdownRemark","edges","config"],"sourceRoot":""}