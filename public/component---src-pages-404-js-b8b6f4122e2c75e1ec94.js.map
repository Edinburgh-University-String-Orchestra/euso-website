{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.fixed.js","webpack:///./src/components/SEO.js","webpack:///./src/components/NotFoundBox.js","webpack:///./src/pages/404.js"],"names":["createHTML","this","SEO","render","title","description","postURL","path","props","postNode","postPath","postSEO","image","postMeta","frontmatter","excerpt","thumbnail","childImageSharp","fixed","src","urljoin","config","siteUrl","replace","siteTitle","siteDescription","siteLogo","blogURL","pathPrefix","schemaOrgJSONLD","url","name","alternateName","siteTitleAlt","push","itemListElement","position","item","headline","content","type","JSON","stringify","property","userTwitter","Component","NotFoundBox","className","to","NotFoundPage","simple"],"mappings":"6FAEA,EAAQ,OAAR,CAA0B,SAAS,SAAUA,GAC3C,OAAO,WACL,OAAOA,EAAWC,KAAM,KAAM,GAAI,S,6MCCjBC,E,gLACnBC,OAAA,WACE,IAEIC,EACAC,EAEAC,EALgBC,EADb,EAEiCN,KAAKO,MAArCC,EAFD,EAECA,SAAUC,EAFX,EAEWA,SAAUC,EAFrB,EAEqBA,QAGxBC,EAAQ,GAGZ,GAAID,EAAS,CACX,IAAME,EAAWJ,EAASK,YAC1BV,EAAQS,EAAST,MACjBC,EAAcQ,EAASR,YAAcQ,EAASR,YAAcI,EAASM,QACjEF,EAASG,YACXJ,EAAQC,EAASG,UAAUC,gBAAgBC,MAAMC,KAEnDb,EAAUc,IAAQC,IAAOC,QAdM,OAAbf,EAc4BG,GAdJH,EAAOA,EAAKgB,QAAQ,MAAb,UAgBjDnB,EAAQiB,IAAOG,UACfnB,EAAcgB,IAAOI,gBACrBb,EAAQS,IAAOK,SAGjBd,EAAQQ,IAAQC,IAAOC,QAASV,GAChC,IAAMe,EAAUP,IAAQC,IAAOC,QAASD,IAAOO,YACzCC,EAAkB,CACtB,CACE,WAAY,oBACZ,QAAS,UACTC,IAAKH,EACLI,KAAM3B,EACN4B,cAAeX,IAAOY,aAAeZ,IAAOY,aAAe,KAoC/D,OAhCItB,GACFkB,EAAgBK,KACd,CACE,WAAY,oBACZ,QAAS,iBACTC,gBAAiB,CACf,CACE,QAAS,WACTC,SAAU,EACVC,KAAM,CACJ,MAAO/B,EACPyB,KAAM3B,EACNQ,YAKR,CACE,WAAY,oBACZ,QAAS,cACTkB,IAAKH,EACLI,KAAM3B,EACN4B,cAAeX,IAAOY,aAAeZ,IAAOY,aAAe,GAC3DK,SAAUlC,EACVQ,MAAO,CACL,QAAS,cACTkB,IAAKlB,GAEPP,gBAKJ,kBAAC,IAAD,KACE,0BAAM0B,KAAK,cAAcQ,QAASlC,IAClC,0BAAM0B,KAAK,QAAQQ,QAAS3B,IAE5B,4BAAQ4B,KAAK,uBAAuBC,KAAKC,UAAUb,IAEnD,0BAAMc,SAAS,SAASJ,QAAS5B,EAAUL,EAAUqB,IACpDhB,GAAW,0BAAMgC,SAAS,UAAUJ,QAAQ,YAC7C,0BAAMI,SAAS,WAAWJ,QAASnC,IACnC,0BAAMuC,SAAS,iBAAiBJ,QAASlC,IACzC,0BAAMsC,SAAS,WAAWJ,QAAS3B,IAEnC,0BAAMmB,KAAK,eAAeQ,QAAQ,wBAClC,0BAAMR,KAAK,kBAAkBQ,QAASlB,IAAOuB,cAC7C,0BAAMb,KAAK,gBAAgBQ,QAASnC,IACpC,0BAAM2B,KAAK,sBAAsBQ,QAASlC,IAC1C,0BAAM0B,KAAK,gBAAgBQ,QAAS3B,M,GApFXiC,c,sGCApBC,G,UAAc,kBACzB,yBAAKC,UAAU,aACb,wBACEA,UAAU,oBADZ,MAGK,0BAAMA,UAAU,SAAhB,MAEL,wBACEA,UAAU,uBADZ,8CAKA,kBAAC,OAAD,CACEC,GAAG,IACHD,UAAU,mBAFZ,qBCJWE,UAPM,kBACnB,kBAAC,IAAD,CAAQC,QAAM,GACZ,kBAAChD,EAAA,EAAD,CAAKE,MAAM,mBACX,kBAAC,EAAD","file":"component---src-pages-404-js-b8b6f4122e2c75e1ec94.js","sourcesContent":["'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport urljoin from 'url-join'\nimport config from '../../data/SiteConfig'\n\nexport default class SEO extends Component {\n  render() {\n    const replacePath = path => (path === `/` ? path : path.replace(/\\/$/, ``));\n    const { postNode, postPath, postSEO } = this.props\n    let title\n    let description\n    let image = ''\n    let postURL\n\n    if (postSEO) {\n      const postMeta = postNode.frontmatter\n      title = postMeta.title\n      description = postMeta.description ? postMeta.description : postNode.excerpt\n      if (postMeta.thumbnail) {\n        image = postMeta.thumbnail.childImageSharp.fixed.src\n      }\n      postURL = urljoin(config.siteUrl, replacePath(postPath))\n    } else {\n      title = config.siteTitle\n      description = config.siteDescription\n      image = config.siteLogo\n    }\n\n    image = urljoin(config.siteUrl, image)\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix)\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n      },\n    ]\n\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': postURL,\n                name: title,\n                image,\n              },\n            },\n          ],\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BlogPosting',\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n          headline: title,\n          image: {\n            '@type': 'ImageObject',\n            url: image,\n          },\n          description,\n        }\n      )\n    }\n    return (\n      <Helmet>\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO && <meta property=\"og:type\" content=\"article\" />}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:creator\" content={config.userTwitter} />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    )\n  }\n}\n","import React from 'react';\nimport {Link} from 'gatsby';\nimport '../styles/components/not-found-box.scss';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const NotFoundBox = () => (\n  <div className=\"not-found\">\n    <h1\n      className=\"not-found__title\"\n    >\n      404<span className=\"blink\">|</span>\n    </h1>\n    <h2\n      className=\"not-found__subtitle\"\n    >\n      The page you&apos;re looking for doesn&apos;t exist.\n    </h2>\n    <Link\n      to=\"/\"\n      className=\"not-found__link\"\n    >\n      Take me back &rarr;\n    </Link>\n  </div>\n);","import React from 'react'\nimport Layout from '../layout'\nimport SEO from '../components/SEO'\nimport { NotFoundBox } from '../components/NotFoundBox';\n\n\nconst NotFoundPage = () => (\n  <Layout simple>\n    <SEO title=\"404: Not found\" />\n    <NotFoundBox />\n  </Layout>\n);\n\nexport default NotFoundPage;"],"sourceRoot":""}