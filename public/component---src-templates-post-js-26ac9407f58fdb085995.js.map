{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["PostTemplate","render","thumbnail","slug","this","props","pageContext","postNode","data","markdownRemark","post","frontmatter","id","category_id","config","postDefaultCategoryID","childImageSharp","fixed","date","formatDate","twitterShare","encodeURIComponent","title","siteUrl","siteTitle","postPath","postSEO","className","href","target","rel","dangerouslySetInnerHTML","__html","html","Component","pageQuery"],"mappings":"2UAWqBA,E,gLACnBC,OAAA,WAAU,IAIJC,EAHIC,EAASC,KAAKC,MAAMC,YAApBH,KACFI,EAAWH,KAAKC,MAAMG,KAAKC,eAC3BC,EAAOH,EAASI,YAGjBD,EAAKE,KACRF,EAAKE,GAAKT,GAGPO,EAAKG,cACRH,EAAKG,YAAcC,IAAOC,uBAGxBL,EAAKR,YACPA,EAAYQ,EAAKR,UAAUc,gBAAgBC,OAG7C,IAAMC,EAAOC,YAAWT,EAAKQ,MACvBE,EAAY,iCAAoCC,mBAAmBX,EAAKY,OAA5D,QAChBR,IAAOS,QADS,IAEdb,EAAKP,KAFS,oBAIlB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BAAWO,EAAKY,MAAhB,MAA2BR,IAAOU,YAEpC,kBAAC,IAAD,CAAKC,SAAUtB,EAAMI,SAAUA,EAAUmB,SAAO,IAChD,6BAASC,UAAU,oBACjB,4BAAQA,UAAS,kBAAoBzB,EAA6B,GAAjB,iBAC9CA,GAAa,kBAAC,IAAD,CAAKe,MAAOP,EAAKR,UAAUc,gBAAgBC,QACzD,yBAAKU,UAAU,QACb,4BAAKjB,EAAKY,OACV,yBAAKK,UAAU,aACb,0BAAMA,UAAU,QAAQT,GAD1B,IAEE,uBACES,UAAU,eACVC,KAAMR,EACNS,OAAO,SACPC,IAAI,uBAJN,YAYN,yBAAKH,UAAU,OAAOI,wBAAyB,CAAEC,OAAQzB,EAAS0B,W,GAjDlCC,aAyD7BC,EAAS,c","file":"component---src-templates-post-js-26ac9407f58fdb085995.js","sourcesContent":["import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport Layout from '../layout'\nimport SEO from '../components/SEO'\nimport config from '../../data/SiteConfig'\nimport { formatDate } from '../utils/global'\n\nimport 'katex/dist/katex.min.css'\n\nexport default class PostTemplate extends Component {\n  render() {\n    const { slug } = this.props.pageContext\n    const postNode = this.props.data.markdownRemark\n    const post = postNode.frontmatter\n    let thumbnail\n\n    if (!post.id) {\n      post.id = slug\n    }\n\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID\n    }\n\n    if (post.thumbnail) {\n      thumbnail = post.thumbnail.childImageSharp.fixed\n    }\n\n    const date = formatDate(post.date)\n    const twitterShare = `http://twitter.com/share?text=${encodeURIComponent(post.title)}&url=${\n      config.siteUrl\n    }/${post.slug}/&via=EdinStrings`\n\n    return (\n      <Layout>\n        <Helmet>\n          <title>{`${post.title} â€“ ${config.siteTitle}`}</title>\n        </Helmet>\n        <SEO postPath={slug} postNode={postNode} postSEO />\n        <article className=\"single container\">\n          <header className={`single-header ${!thumbnail ? 'no-thumbnail' : ''}`}>\n            {thumbnail && <Img fixed={post.thumbnail.childImageSharp.fixed} />}\n            <div className=\"flex\">\n              <h1>{post.title}</h1>\n              <div className=\"post-meta\">\n                <time className=\"date\">{date}</time>/\n                <a\n                  className=\"twitter-link\"\n                  href={twitterShare}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Share\n                </a>\n              </div>\n            </div>\n          </header>\n\n          <div className=\"post\" dangerouslySetInnerHTML={{ __html: postNode.html }} />\n        </article>\n      </Layout>\n    )\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        thumbnail {\n          childImageSharp {\n            fixed(width: 150, height: 150) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n        slug\n        date\n        categories\n        tags\n        template\n      }\n      fields {\n        slug\n        date\n      }\n    }\n  }\n`\n"],"sourceRoot":""}