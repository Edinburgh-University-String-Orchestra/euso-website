{"version":3,"sources":["webpack:///./src/pages/committee.js","webpack:///./src/utils/config.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/Guides.js"],"names":["BlogIndex","posts","data","allMarkdownRemark","edges","simplifiedPosts","useMemo","getSimplifiedPosts","thumbnails","title","config","siteTitle","className","pageQuery","siteUrl","siteLogo","description","userTwitter","options","map","post","id","node","date","frontmatter","slug","fields","tags","thumbnail","childImageSharp","fixed","Guides","guide","to","key"],"mappings":"6FAAA,mMAWe,SAASA,EAAT,GAA8B,IACrCC,EADoC,EAARC,KACfC,kBAAkBC,MAC/BC,EAAkBC,mBACtB,kBAAMC,YAAmBN,EAAO,CAAEO,YAAY,MAC9C,CAACP,IAGH,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQQ,MAAK,eAAiBC,IAAOC,YACrC,kBAAC,IAAD,MACA,yBAAKC,UAAU,aACb,iCACE,yCACA,4UAMA,kBAAC,IAAD,CAAQV,KAAMG,OAOjB,IAAMQ,EAAS,c,kCCtCP,KACbF,UAAW,OACXG,QAAS,mCACTC,SAAU,YACVC,YACE,oEACFC,YAAa,gB,kGCNR,SAASV,EAAmBN,EAAOiB,GACxC,YADsD,IAAdA,MAAU,IAC3CjB,EAAMkB,KAAI,SAACC,GAAD,sBACfC,GAAID,EAAKE,KAAKD,GACdE,KAAMH,EAAKE,KAAKE,YAAYD,KAC5BE,KAAML,EAAKE,KAAKI,OAAOD,KACvBE,KAAMP,EAAKE,KAAKE,YAAYG,KAC5BlB,MAAOW,EAAKE,KAAKE,YAAYf,OACzBS,EAAQV,YAAc,CACxBoB,UAAWR,EAAKE,KAAKE,YAAYI,UAAUC,gBAAgBC,a,kCCRjE,4FAIe,SAASC,EAAT,GAA2B,IAAT7B,EAAQ,EAARA,KAC/B,OACE,yBAAKU,UAAU,cACZV,EAAKiB,KAAI,SAACa,GACT,OACE,kBAAC,OAAD,CAAMC,GAAID,EAAMP,KAAMS,IAAKF,EAAMX,IAC/B,kBAAC,IAAD,CAAKS,MAAOE,EAAMJ,YAClB,4BAAKI,EAAMvB","file":"component---src-pages-committee-js-7827b7d4d6e5efaa5411.js","sourcesContent":["import React, { useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../layout'\nimport Guides from '../components/Guides'\nimport SEO from '../components/SEO'\n\nimport { getSimplifiedPosts } from '../utils/helpers'\nimport config from '../utils/config'\n\nexport default function BlogIndex({ data }) {\n  const posts = data.allMarkdownRemark.edges\n  const simplifiedPosts = useMemo(\n    () => getSimplifiedPosts(posts, { thumbnails: true }),\n    [posts]\n  )\n\n  return (\n    <Layout>\n      <Helmet title={`Committee â€“ ${config.siteTitle}`} />\n      <SEO />\n      <div className=\"container\">\n        <section>\n          <h1>Committee</h1>\n          <p>\n            The orchestra prides itself on the fact that it is independently run by students.\n            The committee oversees the complete organisation of the orchestra, from the everyday\n            tasks of setting out the seats for rehearsals, to the larger tasks of the office bearers\n            in looking after the finances of the society.\n          </p>\n          <Guides data={simplifiedPosts} />\n        </section>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query CommitteeQuery {\n    allMarkdownRemark(\n      sort: { order: [DESC, ASC], fields: [frontmatter___featured, frontmatter___title] }\n      filter: { frontmatter: { template: { eq: \"committee\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            thumbnail {\n              childImageSharp {\n                fixed(width: 150, height: 150) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","export default {\n  siteTitle: 'EUSO',\n  siteUrl: 'https://www.string.eusa.ed.ac.uk',\n  siteLogo: '/logo.png',\n  description:\n    'The official website of the Edinburgh University String Orchestra',\n  userTwitter: 'EdinStrings',\n}\n","export function getSimplifiedPosts(posts, options = {}) {\n  return posts.map((post) => ({\n    id: post.node.id,\n    date: post.node.frontmatter.date,\n    slug: post.node.fields.slug,\n    tags: post.node.frontmatter.tags,\n    title: post.node.frontmatter.title,\n    ...(options.thumbnails && {\n      thumbnail: post.node.frontmatter.thumbnail.childImageSharp.fixed,\n    }),\n  }))\n}\n\nexport function slugify(string) {\n  return (\n    string &&\n    string\n      .match(\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n      )\n      .map((x) => x.toLowerCase())\n      .join('-')\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nexport default function Guides({ data }) {\n  return (\n    <div className=\"grid guide\">\n      {data.map((guide) => {\n        return (\n          <Link to={guide.slug} key={guide.id}>\n            <Img fixed={guide.thumbnail} />\n            <h2>{guide.title}</h2>\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n"],"sourceRoot":""}